{
	"info": {
		"_postman_id": "53c98cb8-ac43-4a77-a5b1-7f3eae3aafe2",
		"name": "Job Postings",
		"description": "Job Posting REST API Requests collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Company (create)",
			"item": [
				{
					"name": "Create Company: Empty email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fff4080-9e45-4d60-972d-a191ba47faf8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8c512411-300b-497f-b2a1-5e3b1595d5b4",
								"exec": [
									"pm.test(\"Status code is not 201\", function () {",
									"    pm.response.to.not.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"\",\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Company: null email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fff4080-9e45-4d60-972d-a191ba47faf8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "92b033ad-e42a-4a96-ad13-b1176cfb36e1",
								"exec": [
									"pm.test(\"Status code is not 201\", function () {",
									"    pm.response.to.not.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Company: create company",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fff4080-9e45-4d60-972d-a191ba47faf8",
								"exec": [
									"pm.globals.set(\"uniqueemail\", Math.random(50));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "92b033ad-e42a-4a96-ad13-b1176cfb36e1",
								"exec": [
									"pm.test(\"Status code is  201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": {{uniqueemail}},\n\t\"password\": \"\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Company: create company with all params",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8fff4080-9e45-4d60-972d-a191ba47faf8",
								"exec": [
									"pm.globals.set(\"currentemail\", Math.random(50));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "92b033ad-e42a-4a96-ad13-b1176cfb36e1",
								"exec": [
									"pm.test(\"Status code is  201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.globals.set(\"currentuserid\",  pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": {{currentemail}},\n\t\"password\": \"\",\n    \"companyName\": \"companyName\",\n    \"companyStreet\": \"companyStreet\",\n    \"companyHouseNumber\": \"companyHouseNumber\",\n    \"companyPostcode\": \"companyPostcode\",\n    \"companyCity\": \"companyCity\",\n    \"contactName\": \"contactName\",\n    \"contactPhone\": \"contactPhone\",\n    \"companyDescription\": \"companyDescription\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/company",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get (Post) Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "59a9c5ea-a602-4291-b88d-2c514941c92d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8fbb42a7-ec1e-4a19-b142-69f25349d2af",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Company is not admin\", function(){",
									"   pm.expect(pm.response.json().isAdmin).to.eql(false); ",
									"});",
									"pm.globals.set(\"currenttoken\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":{{currentemail}},\n\t\"password\":\"\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/user/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get (Post) Token Wrong Password",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "59a9c5ea-a602-4291-b88d-2c514941c92d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8fbb42a7-ec1e-4a19-b142-69f25349d2af",
								"exec": [
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"pm.test(\"Token is null/undefined\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"0.780818734983823\",\n\t\"password\":\"bliblablu\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/user/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company (unverified)",
			"item": [
				{
					"name": "Get Company with nonexisting id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "502e7967-88c4-499f-91a1-583df225f963",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/company/1000000000000000",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company",
								"1000000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company with Id not verified",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "502e7967-88c4-499f-91a1-583df225f963",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/company/{{currentuserid}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company",
								"{{currentuserid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company with authorization (unverified)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "502e7967-88c4-499f-91a1-583df225f963",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"JSON response values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).to.eql(pm.globals.get(\"currentuserid\"));",
									"    pm.expect(jsonData.message).to.be.not.eql(undefined);",
									"    pm.expect(jsonData.verified).to.be.not.eql(undefined);",
									"    pm.expect(jsonData.companyName).to.be.not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/company/{{currentuserid}}/{{currenttoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company",
								"{{currentuserid}}",
								"{{currenttoken}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Check admin existance and get token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "59a9c5ea-a602-4291-b88d-2c514941c92d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8fbb42a7-ec1e-4a19-b142-69f25349d2af",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Is admin\", function () {",
									"    pm.expect(pm.response.json().isAdmin).to.eql(true);",
									"});",
									"pm.globals.set(\"admintoken\", pm.response.json().token);",
									"pm.globals.set(\"adminid\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\":\"admin@admin.com\",\n\t\"password\":\"123\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/user/token",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"user",
								"token"
							]
						},
						"description": "IMPORTANT: Make sure that there is an admin in the database!\nUse following entries: email: admin@admin.com, password: 123"
					},
					"response": []
				},
				{
					"name": "Put Admin: verify non-existing Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac4a27c-15fc-4904-a603-c4161574f38e",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"verify\":true\n}"
						},
						"url": {
							"raw": "http://localhost:3000/admin/verify/100000000000000/{{adminid}}/{{admintoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"verify",
								"100000000000000",
								"{{adminid}}",
								"{{admintoken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Admin: verify company without admin credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac4a27c-15fc-4904-a603-c4161574f38e",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"verify\": true\n}"
						},
						"url": {
							"raw": "http://localhost:3000/admin/verify/{{currentuserid}}/{{currentuserid}}/{{currenttoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"verify",
								"{{currentuserid}}",
								"{{currentuserid}}",
								"{{currenttoken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Admin: verify company without verify",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac4a27c-15fc-4904-a603-c4161574f38e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/admin/verify/{{currentuserid}}/{{adminid}}/{{admintoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"verify",
								"{{currentuserid}}",
								"{{adminid}}",
								"{{admintoken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Admin: unverify company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac4a27c-15fc-4904-a603-c4161574f38e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.sendRequest({",
									"    url: \"http://localhost:3000/company/\" + pm.globals.get(\"currentuserid\") + \"/\" + pm.globals.get(\"currenttoken\"),",
									"    method: 'GET',",
									"    header: {",
									"        'content-type': 'application/json',",
									"        'x-site-code': pm.environment.get(\"x-site-code\")",
									"    },",
									"    body:''",
									"}, function (err, res) {",
									"    pm.test(\"Company is not verified\", function(){",
									"        pm.expect(res.json().message).to.eql(\"uncool\");",
									"        pm.expect(res.json().verified).to.eql(false);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"verify\": false,\n\t\"message\": \"uncool\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/admin/verify/{{currentuserid}}/{{adminid}}/{{admintoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"verify",
								"{{currentuserid}}",
								"{{adminid}}",
								"{{admintoken}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Admin: verify company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bac4a27c-15fc-4904-a603-c4161574f38e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.sendRequest({",
									"    url: \"http://localhost:3000/company/\" + pm.globals.get(\"currentuserid\") + \"/\" + pm.globals.get(\"currenttoken\"),",
									"    method: 'GET',",
									"    header: {",
									"        'content-type': 'application/json',",
									"        'x-site-code': pm.environment.get(\"x-site-code\")",
									"    },",
									"    body:''",
									"}, function (err, res) {",
									"    pm.test(\"Company is verified\", function(){",
									"        pm.expect(res.json().verified).to.be.equal(true);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"verify\": true\n}"
						},
						"url": {
							"raw": "http://localhost:3000/admin/verify/{{currentuserid}}/{{adminid}}/{{admintoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"admin",
								"verify",
								"{{currentuserid}}",
								"{{adminid}}",
								"{{admintoken}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Company (verified)",
			"item": [
				{
					"name": "Get Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "502e7967-88c4-499f-91a1-583df225f963",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"JSON response values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).to.eql(pm.globals.get(\"currentuserid\"));",
									"    pm.expect(jsonData.message).to.be.eql(undefined); //for privacy, this should not be displayed!",
									"    pm.expect(jsonData.verified).to.be.eql(undefined); ",
									"    ",
									"    pm.expect(jsonData.companyName).to.be.not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/company/{{currentuserid}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company",
								"{{currentuserid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company with authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "502e7967-88c4-499f-91a1-583df225f963",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"JSON response values\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).to.eql(pm.globals.get(\"currentuserid\"));",
									"    pm.expect(jsonData.message).to.be.not.eql(undefined); ",
									"    pm.expect(jsonData.verified).to.be.not.eql(undefined); ",
									"    pm.expect(jsonData.companyName).to.be.not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3000/company/{{currentuserid}}/{{currenttoken}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"company",
								"{{currentuserid}}",
								"{{currenttoken}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}